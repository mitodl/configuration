"""
gunicorn configuration file: http://docs.gunicorn.org/en/develop/configure.html

{{ ansible_managed }}
"""

preload_app = True
timeout = 30
bind = "{{ xserver_gunicorn_host }}:{{ xserver_gunicorn_port }}"
pythonpath = "{{ xserver_code_dir }}"
workers = {{ xserver_gunicorn_workers }}

def post_fork(server, worker):
    """
    Close the cache so that newly forked workers cannot accidentally share the
    socket with the processes they were forked from. This prevents a race
    condition in which one worker could get a cache response intended for
    another worker.
    """
    from django.core.cache import cache
    if hasattr(cache, 'close'):
        cache.close()

{{ XSERVER_GUNICORN_EXTRA_CONF }}
